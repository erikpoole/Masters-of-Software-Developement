Part 3 -
1) select Title from Titles where Author="<Author>";

2) select Serial from (Inventory natural join Titles) where Author="<Author>";

3) select Title from (Patrons natural join (CheckedOut natural join (Inventory natural join Titles))) where Name = "<Patron's Name";

4) select Phone from (Phones natural join (Patrons natural join (CheckedOut natural join (Inventory natural join Titles)))) where Title = "<Title>";


Part 4 -
1) select Title from (Inventory natural join Titles) order by Serial limit <N>;

2) select Name from (Patrons natural join (CheckedOut natural join (Inventory natural join Titles))) order by Serial desc limit 1;

3) select * from (Phones natural join Patrons) where Name not in (select Name as CheckedOutUsers from (Phones natural join (Patrons natural join (CheckedOut natural join (Inventory natural join Titles)))));

4) select distinct ISBN, Title from Inventory natural join Titles;


Part 5 -
1) select Name from (CheckedOut natural Join Patrons) group by Name order by count(Name) limit 1;

2) select Author from Titles group by Author Having Count(Author) > 1;

3) select Author from (Titles natural join Inventory) group by Author having count(Author) > 1;


Part 6 -
1) select Name from Players where Elo > 2850;

2) select distinct name from (Players join Games) where Whiteplayer = pID;

3) select distinct name from (Players join Games) where (Whiteplayer = pID and result = 'W');

4) select distinct Players.Name from (Players join (Games natural join Events)) where year(Date) = 2018 and (Players.pID = BlackPlayer or Players.pID = WhitePlayer);

5) select Name, Date from Events natural join (select eID from (Games join Players) where Name = "Carlsen, Magnus" and pID = BlackPlayer and result = "W" union select eID from (Games join Players) where Name = "Carlsen, Magnus" and pID = Whiteplayer and result = "B") lossess;

6) select Name from (select Name from Players join (select BlackPlayer from (Players join Games) where pID=WhitePlayer and Name="Carlsen, Magnus") Bplayers where BlackPlayer = pID union select Name from Players join (select WhitePlayer from (Players join Games) where pID=BlackPlayer and Name="Carlsen, Magnus") Wplayers where WhitePlayer = pID) as opponents;